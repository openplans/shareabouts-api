# Generated by Django 4.2.9 on 2024-02-08 21:26

from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="OAuth2Provider",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="\n        This defines the provider name and identifies it during the auth\n        process.\n    ",
                        max_length=32,
                        unique=True,
                    ),
                ),
                (
                    "id_key",
                    models.CharField(
                        default="id",
                        help_text="\n        The default key name where the user identification field is defined,\n        it’s used in the auth process when some basic user data is returned.\n    ",
                    ),
                ),
                (
                    "requires_email_validation",
                    models.BooleanField(
                        default=False,
                        help_text="\n        Flags the backend to enforce email validation during the pipeline.\n    ",
                    ),
                ),
                (
                    "scope_parameter_name",
                    models.CharField(
                        default="scope",
                        help_text="\n        The scope argument is used to tell the provider the API endpoints you\n        want to call later, it’s a permissions request granted over the\n        `access_token` later retrieved. The default value is `scope` since\n        that’s usually the name used in the URL parameter, but can be\n        overridden if needed.\n    ",
                    ),
                ),
                (
                    "scope_separator",
                    models.CharField(
                        default=" ",
                        help_text="\n        The scope argument is usually a list of permissions to request, the\n        list is joined with a separator, usually just a blank space, but this\n        can differ from provider to provider. Override the default value with\n        this attribute if it differs.\n    ",
                        max_length=10,
                    ),
                ),
                (
                    "authorization_url",
                    models.URLField(
                        help_text="\n        This is the entry point for the authorization mechanism, users must be\n        redirected to this URL.\n    "
                    ),
                ),
                (
                    "access_token_url",
                    models.URLField(
                        help_text="\n        Must point to the API endpoint that provides an `access_token` needed\n        to authenticate in users behalf on future API calls.\n    "
                    ),
                ),
                (
                    "access_token_method",
                    models.CharField(
                        default="GET",
                        help_text="\n        Specifying the method type required to retrieve your access token if\n        it’s not the default GET request.\n    ",
                        max_length=10,
                    ),
                ),
                (
                    "refresh_token_url",
                    models.URLField(
                        blank=True,
                        help_text="\n        Some providers give the option to renew the `access_token` since they\n        are usually limited in time, once that time runs out, the token is\n        invalidated and cannot be used anymore. This attribute should point to\n        that API endpoint.\n    ",
                        null=True,
                    ),
                ),
                (
                    "refresh_token_method",
                    models.CharField(default="POST", max_length=10),
                ),
                ("revoke_token_url", models.URLField(blank=True, null=True)),
                (
                    "revoke_token_method",
                    models.CharField(default="POST", max_length=10),
                ),
                (
                    "response_type",
                    models.CharField(
                        default="code",
                        help_text="\n        The response type expected on the auth process, default value is `code`\n        as dictated by OAuth2 definition. Override it if default value doesn’t\n        fit the provider implementation.\n    ",
                    ),
                ),
                (
                    "state_parameter",
                    models.BooleanField(
                        default=True,
                        help_text="\n        OAuth2 defines that a state parameter can be passed in order to\n        validate the process, it’s kind of a CSRF check to avoid man in the\n        middle attacks. Some don’t recognise it or don’t return it which will\n        make the auth process invalid. Set this attribute to `False` in that\n        case.\n    ",
                    ),
                ),
                (
                    "redirect_state",
                    models.BooleanField(
                        default=False,
                        help_text="\n        For those providers that don’t recognise the `state` parameter, the app\n        can add a redirect_state argument to the `redirect_uri` to mimic it.\n        Set this value to `False` if the provider likes to verify the\n        `redirect_uri` value and this parameter invalidates that check.\n    ",
                    ),
                ),
            ],
        ),
    ]
